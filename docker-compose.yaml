version: "3.7"

services:
  api:
    build: ./
    networks:
      - internalnet
    depends_on:
      - db
    container_name: api_container
    environment:
      - DB_HOST=db
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_DATABASE=${DB_DATABASE}
      - DB_PORT=${DB_PORT}
    ports:
      - '3000:3000'
    volumes:
      - .:/app
      - /app/node_modules
    command: npm start
  db:
    image: mysql:8.4.0
    networks:
      - internalnet
    restart: unless-stopped
    container_name: db_container
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_HOST=${DB_HOST}
    ports:
      - '3307:3306'
    volumes:
      - db:/var/lib/mysql
  migration:
    build: ./
    networks:
      - internalnet
    container_name: migration_container
    depends_on:
      - db
    command: sh -c './wait-for-it.sh -t 0 db:3306 -- npm run migrate up'
    environment:
      - DB_HOST=db
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_DATABASE=${DB_DATABASE}
      - DB_PORT=${DB_PORT}

volumes:
  db:

networks:
  internalnet:
    driver: bridge